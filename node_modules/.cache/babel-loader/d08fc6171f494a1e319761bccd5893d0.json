{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mohanadosman/WebstormProjects/CSCI355/cs355reactp3/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mohanadosman/WebstormProjects/CSCI355/cs355reactp3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/mohanadosman/WebstormProjects/CSCI355/cs355reactp3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mohanadosman/WebstormProjects/CSCI355/cs355reactp3/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mohanadosman/WebstormProjects/CSCI355/cs355reactp3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mohanadosman/WebstormProjects/CSCI355/cs355reactp3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mohanadosman/WebstormProjects/CSCI355/cs355reactp3/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./Admin.css';import{Button,Form,FormControl}from\"react-bootstrap\";import axios from'axios';var Admin=/*#__PURE__*/function(_Component){_inherits(Admin,_Component);function Admin(props){var _this;_classCallCheck(this,Admin);_this=_possibleConstructorReturn(this,_getPrototypeOf(Admin).call(this,props));_this.fetchHistories=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('/admin');case 2:res=_context.sent;_context.next=5;return res.json();case 5:results=_context.sent;_this.setState({results:results});case 7:case\"end\":return _context.stop();}}},_callee);}));_this.indexing=function(e){e.preventDefault();// get the user input url\nvar inputURL=e.target.elements.userInput.value;console.log(inputURL);//pass this url to the post function.\naxios.post('/admin',{inputURL:inputURL}).then(function(res){console.log(res.data);console.log('Indexing Successfully! Data inserted in DB!');});_this.setState({isIndexed:true,count:_this.state.count+1});//     const request = new Request('http://localhost:3000/admin', {\n//         method: 'POST',\n//         headers: new Headers({'Content-Type': 'application/json'}),\n//         body: inputURL\n//     })\n//     // //xmlhttprequest\n//     fetch(request)\n//         .then((res) => {\n//             res.json()\n//                 .then((data)=>{\n//                     console.log(data)\n//                 })\n//         })\n};_this.state={results:[],isIndexed:false,count:0};return _this;}// make AJAX calls, query the data from the search table. http://localhost:3000 or 5000/admin, both working\n// as soon as you click on fetch data button, the table will show.\n_createClass(Admin,[{key:\"render\",value:function render(){var rows=this.state.results.map(function(result,i){return React.createElement(\"tr\",{key:i},React.createElement(\"td\",null,result.searchid),React.createElement(\"td\",null,result.terms),React.createElement(\"td\",null,result.count),React.createElement(\"td\",null,result.searchdate));});return React.createElement(\"div\",null,React.createElement(\"h2\",null,\"Indexing Launcher\"),React.createElement(\"h3\",null,this.state.isIndexed?\"Data inserted into DB! Indexing Count: \".concat(this.state.count):null),React.createElement(Form,{className:\"search\",onSubmit:this.indexing},React.createElement(FormControl,{className:\"mr-sm-1 searchBar\",type:\"url\",placeholder:\"Type a URL to be indexed.\",name:\"userInput\"}),React.createElement(Button,{id:\"searchBtn\",variant:\"btn btn-light purple-btn\",type:\"submit\"},\"Search\")),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"h3\",null,\"User Search Histories \",React.createElement(\"button\",{type:\"button\",className:\"btn btn-outline-light\",onClick:this.fetchHistories},\"Fetch Data\")),React.createElement(\"table\",{className:\"\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"Search ID\"),React.createElement(\"th\",null,\"Terms\"),React.createElement(\"th\",null,\"Number of search results\"),React.createElement(\"th\",null,\"Searching Time\"))),React.createElement(\"tbody\",null,rows)),React.createElement(\"br\",null));}}]);return Admin;}(Component);export default Admin;","map":{"version":3,"sources":["/Users/mohanadosman/WebstormProjects/CSCI355/cs355reactp3/src/components/Admin.js"],"names":["React","Component","Button","Form","FormControl","axios","Admin","props","fetchHistories","fetch","res","json","results","setState","indexing","e","preventDefault","inputURL","target","elements","userInput","value","console","log","post","then","data","isIndexed","count","state","rows","map","result","i","searchid","terms","searchdate"],"mappings":"+9BAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAO,aAAP,CACA,OAAQC,MAAR,CAAgBC,IAAhB,CAAsBC,WAAtB,KAAwC,iBAAxC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAGMC,CAAAA,K,+DACF,eAAYC,KAAZ,CAAkB,uCACd,uEAAMA,KAAN,GADc,MAWlBC,cAXkB,sEAWD,yKACKC,CAAAA,KAAK,CAAC,QAAD,CADV,QACPC,GADO,qCAESA,CAAAA,GAAG,CAACC,IAAJ,EAFT,QAEPC,OAFO,eAGb,MAAKC,QAAL,CAAc,CACVD,OAAO,CAAPA,OADU,CAAd,EAHa,sDAXC,SAmBlBE,QAnBkB,CAmBP,SAACC,CAAD,CAAO,CACdA,CAAC,CAACC,cAAF,GACA;AACA,GAAMC,CAAAA,QAAQ,CAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBC,SAAlB,CAA4BC,KAA7C,CACAC,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAEA;AACAZ,KAAK,CAACmB,IAAN,CAAW,QAAX,CAAqB,CAACP,QAAQ,CAARA,QAAD,CAArB,EACKQ,IADL,CACU,SAACf,GAAD,CAAO,CACTY,OAAO,CAACC,GAAR,CAAYb,GAAG,CAACgB,IAAhB,EACAJ,OAAO,CAACC,GAAR,CAAY,6CAAZ,EACH,CAJL,EAKA,MAAKV,QAAL,CAAc,CACVc,SAAS,CAAE,IADD,CAEVC,KAAK,CAAE,MAAKC,KAAL,CAAWD,KAAX,CAAiB,CAFd,CAAd,EAKJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAjDiB,CAEd,MAAKC,KAAL,CAAa,CACTjB,OAAO,CAAC,EADC,CAETe,SAAS,CAAE,KAFF,CAGTC,KAAK,CAAC,CAHG,CAAb,CAFc,aAOjB,CAED;AACA;yDAyCS,CAEL,GAAME,CAAAA,IAAI,CAAG,KAAKD,KAAL,CAAWjB,OAAX,CAAmBmB,GAAnB,CAAuB,SAACC,MAAD,CAASC,CAAT,CAAe,CAC/C,MACI,2BAAI,GAAG,CAAEA,CAAT,EACI,8BAAKD,MAAM,CAACE,QAAZ,CADJ,CAEI,8BAAKF,MAAM,CAACG,KAAZ,CAFJ,CAGI,8BAAKH,MAAM,CAACJ,KAAZ,CAHJ,CAII,8BAAKI,MAAM,CAACI,UAAZ,CAJJ,CADJ,CAQH,CATY,CAAb,CAWA,MACI,gCACI,kDADJ,CAEI,8BAAK,KAAKP,KAAL,CAAWF,SAAX,kDAA+D,KAAKE,KAAL,CAAWD,KAA1E,EAAkF,IAAvF,CAFJ,CAGI,oBAAC,IAAD,EAAM,SAAS,CAAC,QAAhB,CAAyB,QAAQ,CAAE,KAAKd,QAAxC,EACI,oBAAC,WAAD,EAAa,SAAS,CAAC,mBAAvB,CAA2C,IAAI,CAAC,KAAhD,CAAsD,WAAW,CAAC,2BAAlE,CAA8F,IAAI,CAAC,WAAnG,EADJ,CAEI,oBAAC,MAAD,EAAQ,EAAE,CAAC,WAAX,CAAuB,OAAO,CAAC,0BAA/B,CAA0D,IAAI,CAAC,QAA/D,WAFJ,CAHJ,CASI,8BATJ,CASS,8BATT,CAWO,uDAA0B,8BAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,uBAAhC,CAAwD,OAAO,CAAE,KAAKN,cAAtE,eAA1B,CAXP,CAcI,6BAAO,SAAS,CAAC,EAAjB,EACI,iCACI,8BACI,0CADJ,CAEI,sCAFJ,CAGI,yDAHJ,CAII,+CAJJ,CADJ,CADJ,CASI,iCACCsB,IADD,CATJ,CAdJ,CA2BI,8BA3BJ,CADJ,CA+BH,C,mBAhGe7B,S,EAmGpB,cAAeK,CAAAA,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport './Admin.css';\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport axios from 'axios';\n\n\nclass Admin extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            results:[],\n            isIndexed: false,\n            count:0\n        }\n    }\n\n    // make AJAX calls, query the data from the search table. http://localhost:3000 or 5000/admin, both working\n    // as soon as you click on fetch data button, the table will show.\n    fetchHistories = async () => {\n        const res = await fetch('/admin');\n        const results = await res.json();\n        this.setState({\n            results\n        })\n    }\n\n    indexing = (e) => {\n        e.preventDefault();\n        // get the user input url\n        const inputURL = e.target.elements.userInput.value;\n        console.log(inputURL);\n\n        //pass this url to the post function.\n        axios.post('/admin', {inputURL})\n            .then((res)=>{\n                console.log(res.data);\n                console.log('Indexing Successfully! Data inserted in DB!');\n            })\n        this.setState({\n            isIndexed: true,\n            count: this.state.count+1\n        })\n\n    //     const request = new Request('http://localhost:3000/admin', {\n    //         method: 'POST',\n    //         headers: new Headers({'Content-Type': 'application/json'}),\n    //         body: inputURL\n    //     })\n    //     // //xmlhttprequest\n    //     fetch(request)\n    //         .then((res) => {\n    //             res.json()\n    //                 .then((data)=>{\n    //                     console.log(data)\n    //                 })\n    //         })\n    }\n\n    render() {\n\n        const rows = this.state.results.map((result, i) => {\n            return(\n                <tr key={i}>\n                    <td>{result.searchid}</td>\n                    <td>{result.terms}</td>\n                    <td>{result.count}</td>\n                    <td>{result.searchdate}</td>\n                </tr>\n            )\n        })\n\n        return (\n            <div>\n                <h2>Indexing Launcher</h2>\n                <h3>{this.state.isIndexed?`Data inserted into DB! Indexing Count: ${this.state.count}`:null}</h3>\n                <Form className=\"search\" onSubmit={this.indexing}>\n                    <FormControl className=\"mr-sm-1 searchBar\" type=\"url\" placeholder=\"Type a URL to be indexed.\" name=\"userInput\"/>\n                    <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Search</Button>\n                </Form>\n\n\n                <br/><br/>\n\n                   <h3>User Search Histories <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.fetchHistories}>Fetch Data</button>\n                   </h3>\n\n                <table className=\"\">\n                    <thead>\n                        <tr>\n                            <th>Search ID</th>\n                            <th>Terms</th>\n                            <th>Number of search results</th>\n                            <th>Searching Time</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {rows}\n                    </tbody>\n                </table>\n                <br/>\n            </div>\n        );\n    }\n}\n\nexport default Admin;"]},"metadata":{},"sourceType":"module"}